{"version":3,"sources":["modules/styledComponents.js","modules/tempAPI.js","modules/exports.js","modules/useAxios.js","App.js","modules/useInput.js","modules/useTab.js","modules/useTitle.js","modules/useClick.js","modules/useHover.js","modules/useConfirm.js","modules/usePreventLeave.js","modules/useFadeIn.js","modules/useNetwork.js","modules/useScroll.js","modules/useFullScreen.js","modules/useNotification.js","index.js"],"names":["Button","styled","button","p","index","content","tab","working","mouseHover","target","style","color","setTimeout","sayHello","includes","filter","e","innerText","push","randomColor","getRandomInt","min","max","Math","floor","random","componentToHex","c","hex","toString","length","useAxios","opts","axiosInstance","defaultAxios","useState","loading","error","data","state","setState","trigger","setTrigger","refetch","Date","useEffect","url","then","catch","App","myName","initVal","validator","value","setValue","onChange","event","willUpdate","useInput","initialTab","allTabs","currentIndex","setCurrentIndex","Array","isArray","currentItem","changeItem","useTabs","titleUpdater","initTitle","title","setTitle","document","querySelector","useTitle","myInput","useRef","current","focus","fun","element","innerElement","addEventListener","cursor","removeEventListener","useClick","hover","useHover","confirmDel","msg","onConfirm","onCancel","window","confirm","err","console","log","useConfirm","clear","listener","preventDefault","returnValue","enablePrevent","disablePrevent","usePreventLeave","fadeInH1","duration","delay","transition","opacity","span","createElement","appendChild","ref","useFadeIn","onLine","navigator","status","setStatus","handleChange","useNetwork","online","x","y","pos","setPos","onScroll","scrollY","scrollX","useScroll","callback","runCb","isFull","triggerFull","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullScreen","exitFull","exitFullscreen","mozExitFullScreen","webkitExitFullScreen","msExitFullScreen","useFullScreen","bool","reqFull","triggerNotif","options","Notification","permission","requestPermission","useNotification","icon","body","className","right","position","map","section","onClick","placeholder","onDoubleClick","alt","height","src","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a427e033.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  background: ${(p) => { return p.index === 0 ? \"pink\" : p.index === 1 ? \"lightblue\" : \"lightYellow\" }};\r\n  margin-right : ${p => { if (p.index < 2) return \"5px;\" }}\r\n`;\r\n\r\n","export const content = [\r\n    {\r\n        tab: \"Section 1\",\r\n        content: \"I'm the content of the Section 1\"\r\n    },\r\n    {\r\n        tab: \"Section 2\",\r\n        content: \"I'm the content of the Section 2\"\r\n    }\r\n    ,\r\n    {\r\n        tab: \"Section 3\",\r\n        content: \"I'm the content of the Section 3\"\r\n    }\r\n];","export { useInput } from \"./useInput\";\r\nexport { useTabs } from \"./useTab\";\r\nexport { useTitle } from \"./useTitle\";\r\nexport { useClick } from \"./useClick\";\r\nexport { useHover } from \"./useHover\";\r\nexport { useConfirm } from \"./useConfirm\";\r\nexport { usePreventLeave } from \"./usePreventLeave\";\r\nexport { useFadeIn } from \"./useFadeIn\";\r\nexport { useNetwork } from \"./useNetwork\";\r\nexport { useScroll } from \"./useScroll\";\r\nexport { useFullScreen } from \"./useFullScreen\";\r\nexport { useNotification } from \"./useNotification\";\r\n\r\n// export { useBeforeLeave } from \"./useBeforeLeave\";\r\n\r\nlet working = [];\r\n\r\n//useHover\r\nexport const mouseHover = (p) => {\r\n\r\n    p.target.style.color = \"#ff9933\";\r\n    setTimeout(() => {\r\n        p.target.style.color = \"#000\";\r\n    }, 1000)\r\n\r\n};\r\n\r\n//useClick\r\nexport const sayHello = (p) => {\r\n\r\n    if (working.includes(\"sayHello\")) {\r\n        working = working.filter((e) => e !== \"sayHello\");\r\n        p.target.style.color = \"black\";\r\n        p.target.innerText = \"Bye!\"\r\n    } else {\r\n        working.push(\"sayHello\");\r\n        p.target.style.color = \"red\";\r\n        p.target.innerText = \"Hi!\"\r\n    }\r\n\r\n};\r\n\r\nexport const throttle = (func, delay) => {\r\n    let prev = Date.now() - delay;\r\n\r\n    return (...args) => {\r\n        let current = Date.now();\r\n        if (current - prev >= delay) {\r\n            console.log(args)\r\n            prev = current;\r\n            func.apply(null, args);\r\n        }\r\n    }\r\n};\r\n\r\n// randomColor\r\n\r\nexport const randomColor = () => {\r\n\r\n    function getRandomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    }\r\n\r\n    function componentToHex(c) {\r\n        var hex = c.toString(16);\r\n        return hex.length == 1 ? \"0\" + hex : hex;\r\n    }\r\n\r\n    return [componentToHex(getRandomInt(30, 250))\r\n        , componentToHex(getRandomInt(30, 250))\r\n        , componentToHex(getRandomInt(30, 250))]\r\n\r\n}","import defaultAxios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst useAxios = (opts, axiosInstance = defaultAxios) => {\r\n    // 별도로 설정한 axiosInstance 인수가 없으면 defaultAxios를 대신 담는다.\r\n\r\n    const [state, setState] = useState({\r\n        loading: true,\r\n        error: null,\r\n        data: null\r\n    });\r\n    const [trigger, setTrigger] = useState(0);\r\n    const refetch = () => {\r\n        setState({\r\n            ...state,\r\n            loading: true\r\n        });\r\n        setTrigger(new Date()); // trigger가 어떤 수로든 변경되면 useEffect에서 감지하고 재실행된다.\r\n    }\r\n    useEffect(() => {\r\n        if (!opts.url) return;\r\n        axiosInstance(opts).then(data => {\r\n            setState({\r\n                ...state,\r\n                loading: false,\r\n                data\r\n            })\r\n        }).catch(error => {\r\n            setState({ ...state, loading: false, error })\r\n        })\r\n    }, [trigger])\r\n    return { ...state, refetch };\r\n}\r\n\r\nexport default useAxios;","// import ReactDOM from \"react-dom\";\n// import axios from 'axios';\nimport React, { createElement, useEffect, useRef, useState } from \"react\";\nimport { Button } from \"./modules/styledComponents\";\nimport { content } from \"./modules/tempAPI\";\n\n// Hooks \nimport { useFullscreen } from \"./modules/useFullScreen\";\nimport { useInput, useTabs, useTitle, useClick, useHover, useConfirm, usePreventLeave, useFadeIn, useNetwork, useScroll, useFullScreen, useNotification } from \"./modules/exports\"\n// funcs\nimport { sayHello, mouseHover } from \"./modules/exports\"\nimport { elementType } from \"prop-types\";\nimport useAxios from \"./modules/useAxios\";\n\nconst App = () => {\n\n    // console.clear()\n\n    // useInput - 입력 10자 이내, @를 포함하지 않음\n    const inputCondition = value => value.length <= 10 && !value.includes(\"@\");\n    const myName = useInput(\"surimi\", inputCondition);\n\n    // useTabs - API 길이 탭 생성\n    const { currentItem, changeItem } = useTabs(0, content);\n\n    // useEffect\n    const titleUpdater = useTitle(\"Loading...\");\n\n    // useRef\n    const myInput = useRef();\n    setTimeout(() => myInput.current?.focus(), 5000);\n    // [Optional chaining] myInput.current 가 null 또는 undefined가 아니면 focus() 실행\n\n    // useClick\n    const title = useClick(sayHello);\n\n    // useHover\n    const hover = useHover(mouseHover);\n\n    // useConfirm\n    const deleteConsole = () => console.clear();\n    const abort = () => console.log(\"Console clear aborted.\");\n    const confirmDel = useConfirm(\"Are you sure?\", deleteConsole, abort);\n\n    // usePreventLeave\n    const { enablePrevent, disablePrevent } = usePreventLeave();\n\n    // useBeforeLeave\n    /*                             ##  Warning이 뜸\n        const begForLife = () => {\n            console.log(\"# useBeforeLeave : Plz, dont leave ;(\");\n    \n        }\n        useBeforeLeave(begForLife);\n    */\n\n    // useFadeIn\n    const fadeInH1 = useFadeIn(5, 1);\n\n    // useNetwork\n    const handleNetworkChange = online => {\n        console.log(online ? \"We just went online\" : \"We are now offline\")\n    }\n    const onLine = useNetwork(handleNetworkChange);\n\n\n    // useScroll\n    const { y, c } = useScroll();\n\n    // useFullscreen\n    const checkFull = (bool) => {\n        console.log(bool ? \"We are Full\" : \"We are small\");\n    }\n    const { element: reqFull, triggerFull, exitFull } = useFullScreen(checkFull);\n\n    // useNotification\n    const options = {\n        icon: 'http://cdn.sstatic.net/stackexchange/img/logos/so/so-icon.png',\n        body: 'Hi!! :D'\n    }\n\n    const triggerNotif = useNotification(\"Can I steal your Kimchi?\", options);\n\n    // useAxios\n    const { loading, data, error, refetch } = useAxios({ url: \"https://yts.mx/api/v2/list_movies.json\" });\n\n    // console.log(`loading : ${loading}\\ndata : ${(JSON.stringify(data))}\\nerror : ${error}`);\n\n    return (\n        <div className=\"App\">\n            <h2 style={{ right: \"5vw\", position: \"fixed\", color: c }}>Hello React Hook</h2>\n            <h3># useState</h3>\n            <p>useInput</p>\n            <input {...myName} />\n\n            <p>useTabs</p>\n            {content.map((section, index) => (\n                <Button index={index} onClick={() => changeItem(index)}>{section.tab}</Button>\n            ))}\n            <p>{currentItem.content}</p>\n\n            <hr />\n\n            <h3># useEffect</h3>\n            <input onChange={(p) => titleUpdater(p.target.value)} placeholder=\"change title\" />\n\n            <hr />\n\n            <h3># useRef</h3>\n            <input ref={myInput} placeholder=\"get focus after 5sec\"></input>\n\n            <hr />\n\n            <h3># useClick</h3>\n            <h2 onDoubleClick={confirmDel} ref={title}>click me!</h2>\n\n            <hr />\n\n            <h3># useHover</h3>\n            <h2 ref={hover}>hover on here!</h2>\n\n            <hr />\n\n            <h3># useConfirm</h3>\n            <button onClick={confirmDel}>delConsole</button>\n\n            <hr />\n\n            <h3># usePreventLeave</h3>\n            <button onClick={enablePrevent}>Protect</button>\n            <button onClick={disablePrevent}>UnProtect</button>\n            <br />\n            <span>Enable 'Protect' and refresh the window!</span>\n\n            <hr />\n\n            <h3># useFadeIn</h3>\n            <div {...fadeInH1}><b>\n                <p>Hello!!! :D</p></b>\n            </div>\n\n            <hr />\n\n            <h3># useNetwork</h3>\n            <h2>{onLine ? \"onLine\" : \"offLine\"}</h2>\n\n            <hr />\n\n            <h3># useScroll</h3>\n            <h1 style={{ position: \"fixed\", color: y > 100 ? \"red\" : \"blue\" }}>Hi</h1>\n            <hr />\n\n            <h3># useFullscreen</h3>\n            <img alt=\"click\" onClick={exitFull} ref={reqFull} height=\"100\" src=\"https://pbs.twimg.com/profile_images/770139154898382848/ndFg-IDH_400x400.jpg\" />\n            <button onClick={triggerFull}>Image Fullscreen</button>\n            <hr />\n\n            <h3># useNotification</h3>\n            <button onClick={triggerNotif}>Notification</button>\n\n            <hr />\n\n            <h3># useAxios</h3>\n            <button onClick={refetch}>Refetch!</button>\n            <span>{data && data.status}</span>\n            <span>{loading && \"Loading\"}</span>\n\n            <hr />\n\n        </div >\n    );\n};\n\n// {...myName} spread operator(스프레드 연산자)\n// 'value={myName.val} onChange={myName.onChange}'와 같음\n\n// spread operator(스프레드 연산자)란?\n// https://www.techiediaries.com/react-spread-operator-props-setstate/\n\n// > input의 값을 변경하려 하면\n/*\nWarning: You provided a `value` prop to a form field without an `onChange` handler. This will render a read-only field. If the field should be mutable use `defaultValue`. Otherwise, set either `onChange` or `readOnly`.\n이런 에러가 뜬다\n*/\n\nexport default App;\n// ReactDOM.render(<App />, rootElement);\n","import { useState } from \"react\";\r\n\r\nexport const useInput = (initVal, validator) => {\r\n    const [value, setValue] = useState(initVal);\r\n    const onChange = event => {\r\n        const {\r\n            target: { value }\r\n        } = event; // ES6\r\n\r\n        // 동일한 코드 => const value = event.target.value;+\r\n\r\n        let willUpdate = true;\r\n        if (typeof validator === \"function\") {\r\n            willUpdate = validator(value);\r\n        }\r\n\r\n        if (willUpdate) {\r\n            setValue(value);\r\n        }\r\n    };\r\n\r\n    return { value, onChange };\r\n};","import { useState } from 'react'\r\n\r\nexport const useTabs = (initialTab, allTabs) => {\r\n    const [currentIndex, setCurrentIndex] = useState(initialTab);\r\n    if (!allTabs || !Array.isArray(allTabs)) {\r\n        // allTabs가 undefined이거나 배열이 아니면 return\r\n        return;\r\n    }\r\n    return {\r\n        currentItem: allTabs[currentIndex],\r\n        changeItem: setCurrentIndex // setter 함수 반환\r\n    };\r\n};","import { useEffect, useState } from \"react\";\r\n\r\nexport const useTitle = initTitle => {\r\n    const [title, setTitle] = useState(initTitle);\r\n    const updateTitle = () => {\r\n        const htmlTitle = document.querySelector(\"title\");\r\n        htmlTitle.innerText = title;\r\n    }\r\n    useEffect(updateTitle, [title]);\r\n    return setTitle\r\n}","import { useEffect, useRef } from \"react\";\r\n\r\nexport const throttle = (func, delay) => {\r\n    let prev = Date.now() - delay;\r\n\r\n    return (...args) => {\r\n        let current = Date.now();\r\n        if (current - prev >= delay) {\r\n            prev = current;\r\n            func.apply(null, args);\r\n        }\r\n    }\r\n};\r\n\r\nexport const useClick = (fun) => {\r\n    const element = useRef();\r\n    useEffect(() => {\r\n        if (typeof fun !== \"function\") {\r\n            return;\r\n        }\r\n        // 변수를 useEffect 안에서 선언해두지 않으면, useRef()가 unmount되는 시점에 null이 되어버리므로\r\n        const innerElement = element.current;\r\n\r\n        // component 가 mount 되었을 때,\r\n        if (innerElement) {\r\n            innerElement.addEventListener('click', fun);\r\n            innerElement.style.cursor = \"pointer\";\r\n        }\r\n\r\n        // componentWillUnmount때 작동할 함수\r\n        return () => {\r\n            // \r\n            if (innerElement) {\r\n                innerElement.removeEventListener(\"click\", fun);\r\n            }\r\n        }\r\n    }, [fun]); // dependency는 없음 = componentUpdate에는 반응하지 않음\r\n    return element;\r\n}\r\n","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useHover = (fun) => {\r\n    // 빈 ref 생성\r\n    const element = useRef();\r\n\r\n    useEffect(() => {\r\n        const innerElement = element.current;\r\n        if (innerElement) {\r\n            innerElement.addEventListener(\"mouseenter\", fun);\r\n            innerElement.style.cursor = \"pointer\";\r\n        }\r\n        return () => {\r\n            if (innerElement) {\r\n                innerElement.removeEventListener(\"mouseenter\", fun);\r\n            }\r\n        }\r\n    }, [fun])\r\n\r\n    return element;\r\n}","export const useConfirm = (msg, onConfirm, onCancel) => {\r\n    if (typeof onConfirm !== \"function\") return;\r\n\r\n    const confirmAction = () => {\r\n        if (window.confirm(msg)) onConfirm();\r\n        else\r\n            try { onCancel(); } // onCancel이 없는 경우\r\n            catch (err) { console.log(\"abort function doesn't exiest!\"); return };\r\n    }\r\n\r\n    return confirmAction;\r\n}","export const usePreventLeave = () => {\r\n    const listener = event => {\r\n        event.preventDefault();\r\n        event.returnValue = \"\";\r\n    }\r\n    const enablePrevent = () => window.addEventListener(\"beforeunload\", listener);\r\n    const disablePrevent = () => window.removeEventListener(\"beforeunload\", listener);\r\n    return { enablePrevent, disablePrevent }\r\n}\r\n\r\n// return { enablePrevent, disablePrevent }는\r\n// return { enablePrevent : enablePrevent, disablePrevent : disablePrevent }와 같음","import { useEffect, useRef } from \"react\";\r\n\r\nexport const useFadeIn = (duration = 1, delay = 1) => {\r\n    const element = useRef();\r\n    useEffect(() => {\r\n        if (typeof duration != \"number\" || typeof delay != \"number\") return;\r\n        if (element.current) {\r\n            const { current } = element;\r\n            current.style.transition = `opacity ${duration}s ease-in-out ${delay}s`;\r\n            current.style.opacity = 1;\r\n\r\n            let span = document.createElement(\"span\");\r\n            span.innerText = `(duration${duration}s, delay${delay}s)`;\r\n            current.appendChild(span);\r\n        }\r\n    }, []);\r\n    return { ref: element, style: { opacity: 0 } }\r\n};","import { useEffect, useState } from \"react\";\r\n\r\nexport const useNetwork = onChange => {\r\n    const [status, setStatus] = useState(navigator.onLine);\r\n    // navigator.onLine은 현재 웹사이트가 온라인인지 아닌지를 판별해 true/ false 반환\r\n    const handleChange = () => {\r\n        if (typeof onChange === \"function\") {\r\n            onChange(navigator.onLine);\r\n        }\r\n        setStatus(navigator.onLine);\r\n\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"online\", handleChange);\r\n        window.addEventListener(\"offline\", handleChange);\r\n        return () => {\r\n            window.removeEventListener(\"online\", handleChange);\r\n            window.removeEventListener(\"offline\", handleChange);\r\n        }\r\n    }, [])\r\n\r\n    return status;\r\n};","import { useEffect, useState } from \"react\";\r\nimport { randomColor } from \"./exports\";\r\n\r\nexport const useScroll = () => {\r\n    const [pos, setPos] = useState({ x: 0, y: 0, c: 'black' })\r\n    const onScroll = (event) => {\r\n\r\n        let c = randomColor();\r\n\r\n        setPos({ y: window.scrollY, x: window.scrollX, c: `#${c[0]}${c[1]}${c[2]}` });\r\n    }\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", onScroll);\r\n        return () => window.removeEventListener(\"scroll\", onScroll);\r\n    }, [])\r\n    return pos;\r\n}","import { useRef } from \"react\";\r\n\r\nexport const useFullScreen = (callback) => {\r\n    const element = useRef();\r\n    const runCb = isFull => {\r\n        if (callback && typeof callback === \"function\") {\r\n            callback(isFull);\r\n        }\r\n    }\r\n    const triggerFull = () => {\r\n\r\n        if (element.current) {\r\n            if (element.current.requestFullscreen) {\r\n                element.current.requestFullscreen(); // chrome\r\n            } else if (element.current.mozRequestFullScreen) {\r\n                element.current.mozRequestFullScreen();// firefox\r\n            } else if (element.current.webkitRequestFullScreen) {\r\n                element.current.webkitRequestFullScreen();// opera\r\n            } else if (element.current.msRequestFullScreen) {\r\n                element.current.msRequestFullScreen(); // MicroSoft\r\n            }\r\n            runCb(true);\r\n        }\r\n    }\r\n    const exitFull = () => {\r\n        if (document.exitFullscreen) {\r\n            document.exitFullscreen(); // chrome\r\n        } else if (document.mozExitFullScreen) {\r\n            document.mozExitFullScreen(); // firefox\r\n        } else if (document.webkitExitFullScreen) {\r\n            document.webkitExitFullScreen(); // opera\r\n        } else if (document.msExitFullScreen) {\r\n            document.msExitFullScreen(); // MicroSoft\r\n        }\r\n        // Fullscreen의 요청은 element에서 하지만\r\n        // Fullscreen에서 빠져나오는건 document에서 한다.\r\n        runCb(false);\r\n    }\r\n    return { element, triggerFull, exitFull };\r\n}","export const useNotification = (title, options) => {\r\n\r\n    if (!(\"Notification\" in window)) return;\r\n    // https://developer.mozilla.org/en-US/docs/Web/API/notification\r\n\r\n    const fireNotif = () => {\r\n\r\n        if (Notification.permission !== \"granted\") {\r\n            Notification.requestPermission().then(permission => {\r\n                if (permission === \"granted\") {\r\n                    new Notification(title, options);\r\n                } else {\r\n                    return;\r\n                }\r\n            });\r\n        } else {\r\n            new Notification(title, options);\r\n        }\r\n\r\n    }\r\n    return fireNotif;\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n); // ReactDom은 하나의 Component만 render한다."],"sourceRoot":""}